init push = 0x823118   br label %for.cond
init push = 0x8238c8   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ]
init push = 0x823a38   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
init push = 0x823b50   %cmp = icmp slt i32 %i.0, 10
init push = 0x7c7ac8   br i1 %cmp, label %for.body, label %for.end
init push = 0x823dc0   %add = add nsw i32 %sum.0, 1
init push = 0x823038   br label %for.inc
init push = 0x823e30   %inc = add nsw i32 %i.0, 1
init push = 0x8239e8   br label %for.cond
init push = 0x823ea0   %div = sdiv i32 %i.0, %sum.0
init push = 0x823f00   ret void
inst =   br label %for.cond name = 
b4 flow in
b5 flow in
prev inst map = 

prev inst map = 

prev inst map = %sum.0  

prev inst map = 

prev inst map = 

prev inst map = %cmp    

prev inst map = %i.0    

prev inst map = %add    

prev inst map = 

prev inst map = %div    

prev inst map = %inc    

prev out memory = 

size of it is 0
b4 transfer
reached transfer where inst =   br label %for.cond 0x823118
b5 transfer
prev out memory = 

size of it is 0
b4 flowout
mems = 


--spacing--


b5 flowout
inst =   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] name = %sum.0  
b4 flow in
path len = 1
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 3
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 

inmem = 

joined mem = 

flowin-b4 make pair
path len = 4
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 5
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 

inmem = 

joined mem = 

flowin-b4 make pair
path len = 6
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 

inmem = 

joined mem = 

flowin-b4 make pair
path len = 8
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 

inmem = 

joined mem = 

flowin-b4 make pair
path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] and 1
b5 flow in
prev inst map = 

prev inst map = 

prev inst map = %sum.0  

prev inst map = 

prev inst map = 

prev inst map = %cmp    

prev inst map = %i.0    

prev inst map = %add    

prev inst map = 

prev inst map = %div    

prev inst map = %inc    

(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
prev out memory = 

size of it is 0
b4 transfer
reached transfer where inst =   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] 0x8238c8
b5 transfer
prev out memory = 

size of it is 0
b4 flowout
mems = 


--spacing--

    [ %sum.0   |-> Zero      ]
inst name = %sum.0   for inst   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ]
domains = 
Uninit   Zero     Zero     domains differ, add successors? if they were they would be
succ = %i.0    
succ = %cmp    
succ = 
succ = %add    
succ = %div    
succ = 
succ = %inc    
succ = 
succ = %sum.0  
(prevmem) we just may be loopin. found   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] and 1
b4 construct map
(cmap) we just may be loopin. found   br label %for.cond and 1
b5 construct map
b5 flowout
inst =   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] name = %i.0    
b4 flow in
names = %sum.0   %i.0    
path len = 1
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%sum.0   
Zero     path len = 2
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 4
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 

inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%inc     
Uninit   %sum.0   
Zero     path len = 5
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 6
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 

inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %inc     
Uninit   %sum.0   
Zero     path len = 7
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 8
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 

inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
Uninit   %inc     
Uninit   %sum.0   
Zero     path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] and 1
b5 flow in
prev inst map = 

prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = 

prev inst map = %cmp    

prev inst map = %i.0    

prev inst map = %add    

prev inst map = 

prev inst map = %div    

prev inst map = %inc    

(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
prev out memory = 

size of it is 0
b4 transfer
reached transfer where inst =   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] 0x823a38
b5 transfer
prev out memory = 

size of it is 0
b4 flowout
mems = 


--spacing--

    [ %i.0     |-> Zero      ]
inst name = %i.0     for inst   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
domains = 
Uninit   Zero     Zero     domains differ, add successors? if they were they would be
succ = %cmp    
succ = 
succ = %add    
succ = %div    
succ = 
succ = %inc    
succ = 
succ = %sum.0  
succ = %i.0    
(prevmem) we just may be loopin. found   %cmp = icmp slt i32 %i.0, 10 and 1
b4 construct map
(cmap) we just may be loopin. found   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] and 1
b5 construct map
b5 flowout
inst =   %cmp = icmp slt i32 %i.0, 10 name = %cmp    
b4 flow in
names = %add     %cmp    
names = %cmp     %cmp    
names = %i.0     %cmp    
names = %inc     %cmp    
names = %sum.0   %cmp    
path len = 1
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
Uninit   %i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 2
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
Uninit   %i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 3
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 5
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 

inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
Uninit   %i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 6
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 

inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
Uninit   %i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 8
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %cmp = icmp slt i32 %i.0, 10 and 1
b5 flow in
prev inst map = 

prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = 

prev inst map = %cmp    

prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    

prev inst map = 

prev inst map = %div    

prev inst map = %inc    

(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
prev out memory = 

size of it is 0
b4 transfer
reached transfer where inst =   %cmp = icmp slt i32 %i.0, 10 0x823b50
b5 transfer
prev out memory = 

size of it is 0
b4 flowout
mems = 


--spacing--

    [ %cmp     |-> MaybeZero ]
inst name = %cmp     for inst   %cmp = icmp slt i32 %i.0, 10
domains = 
Uninit   MaybeZeroMaybeZerodomains differ, add successors? if they were they would be
succ = 
succ = %add    
succ = %div    
succ = 
succ = %inc    
succ = 
succ = %sum.0  
succ = %i.0    
succ = %cmp    
(prevmem) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b4 construct map
(cmap) we just may be loopin. found   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] and 1
b5 construct map
b5 flowout
inst =   br i1 %cmp, label %for.body, label %for.end name = 
b4 flow in
names = %add     
names = %cmp     
names = %i.0     
names = %inc     
names = %sum.0   
path len = 1
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 2
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 3
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 4
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 6
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 

inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 7
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 8
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 

inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 flow in
prev inst map = 

prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = 

prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    

prev inst map = 

prev inst map = %div    

prev inst map = %inc    

(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
prev out memory = 

size of it is 0
b4 transfer
reached transfer where inst =   br i1 %cmp, label %for.body, label %for.end 0x7c7ac8
b5 transfer
prev out memory = 

size of it is 0
b4 flowout
mems = 


--spacing--


(cmap) we just may be loopin. found   %cmp = icmp slt i32 %i.0, 10 and 1
b5 flowout
inst =   %add = add nsw i32 %sum.0, 1 name = %add    
b4 flow in
names = %add     %add    
names = %cmp     %add    
names = %i.0     %add    
names = %inc     %add    
names = %sum.0   %add    
path len = 1
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 2
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 3
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 5
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 

inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 8
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %add = add nsw i32 %sum.0, 1 and 1
b5 flow in
prev inst map = 

prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    

prev inst map = 

prev inst map = %div    

prev inst map = %inc    

(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
prev out memory = 

size of it is 0
b4 transfer
reached transfer where inst =   %add = add nsw i32 %sum.0, 1 0x823dc0
opname = add opcode = 12
b5 transfer
prev out memory = 

size of it is 0
b4 flowout
mems = 


--spacing--

    [ %add     |-> NonZero   ]
inst name = %add     for inst   %add = add nsw i32 %sum.0, 1
domains = 
Uninit   NonZero  NonZero  domains differ, add successors? if they were they would be
succ = 
succ = %inc    
succ = 
succ = %sum.0  
succ = %i.0    
succ = %cmp    
succ = 
succ = %add    
succ = %div    
(prevmem) we just may be loopin. found   br label %for.inc and 1
b4 construct map
(cmap) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 construct map
b5 flowout
inst =   br label %for.inc name = 
b4 flow in
names = %add     
names = %cmp     
names = %i.0     
names = %inc     
names = %sum.0   
path len = 1
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 2
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 3
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 5
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 6
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 8
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 

inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   br label %for.inc and 1
b5 flow in
prev inst map = 

prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %div    

prev inst map = %inc    

(prevmeminst) pred = %add    
(prevmeminst) pred = 
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 transfer
reached transfer where inst =   br label %for.inc 0x823038
b5 transfer
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 flowout
mems = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--


(cmap) we just may be loopin. found   %add = add nsw i32 %sum.0, 1 and 1
b5 flowout
inst =   %inc = add nsw i32 %i.0, 1 name = %inc    
b4 flow in
names = %add     %inc    
names = %cmp     %inc    
names = %i.0     %inc    
names = %inc     %inc    
names = %sum.0   %inc    
path len = 1
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 2
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 3
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 4
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 5
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 6
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 7
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %inc = add nsw i32 %i.0, 1 and 1
b5 flow in
prev inst map = 

prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %div    

prev inst map = %inc    

(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
prev out memory = 

size of it is 0
b4 transfer
reached transfer where inst =   %inc = add nsw i32 %i.0, 1 0x823e30
opname = add opcode = 12
b5 transfer
prev out memory = 

size of it is 0
b4 flowout
mems = 


--spacing--

    [ %inc     |-> NonZero   ]
inst name = %inc     for inst   %inc = add nsw i32 %i.0, 1
domains = 
Uninit   NonZero  NonZero  domains differ, add successors? if they were they would be
succ = 
succ = %sum.0  
succ = %i.0    
succ = %cmp    
succ = 
succ = %add    
succ = %div    
succ = 
succ = %inc    
(prevmem) we just may be loopin. found   br label %for.cond and 1
b4 construct map
(cmap) we just may be loopin. found   br label %for.inc and 1
b5 construct map
b5 flowout
inst =   br label %for.cond name = 
b4 flow in
names = %add     
names = %cmp     
names = %i.0     
names = %inc     
names = %sum.0   
path len = 1
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 2
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 3
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 5
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 6
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 7
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 8
sizeof predsinst = 2
code goes here
(flowin) we just may be loopin. found   br label %for.cond and 1
b5 flow in
prev inst map = 

prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %div    

prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 transfer
reached transfer where inst =   br label %for.cond 0x8239e8
b5 transfer
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 flowout
mems = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--


(cmap) we just may be loopin. found   %inc = add nsw i32 %i.0, 1 and 1
b5 flowout
inst =   %div = sdiv i32 %i.0, %sum.0 name = %div    
b4 flow in
names = %add     %div    
names = %cmp     %div    
names = %i.0     %div    
names = %inc     %div    
names = %sum.0   %div    
path len = 1
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 2
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 3
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 5
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 8
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 9
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 10
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %div    

prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmem) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
prev out memory = 

size of it is 0
b4 transfer
reached transfer where inst =   %div = sdiv i32 %i.0, %sum.0 0x823ea0
opname = sdiv opcode = 19
b5 transfer
prev out memory = 

size of it is 0
b4 flowout
mems = 


--spacing--

    [ %div     |-> Uninit    ]
inst name = %div     for inst   %div = sdiv i32 %i.0, %sum.0
domains = 
Uninit   Uninit   Uninit   b4 construct map
(cmap) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 construct map
b5 flowout
inst =   ret void name = 
b4 flow in
names = %add     
names = %cmp     
names = %i.0     
names = %inc     
names = %sum.0   
path len = 1
sizeof predsinst = 1
code goes here
pred name = %div     and   %div = sdiv i32 %i.0, %sum.0 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 2
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 3
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 5
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 6
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 8
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 9
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 10
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 11
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %div    
(prevmeminst) pred = 
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 transfer
reached transfer where inst =   ret void 0x823f00
b5 transfer
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 flowout
mems = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--


(cmap) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 flowout
inst =   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] name = %sum.0  
b4 flow in
names = %add     %sum.0  
names = %cmp     %sum.0  
names = %div     %sum.0  
names = %i.0     %sum.0  
names = %inc     %sum.0  
names = %sum.0   %sum.0  
path len = 1
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 3
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 5
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 6
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 8
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 transfer
reached transfer where inst =   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] 0x8238c8
b5 transfer
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 flowout
mems = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inst name = %sum.0   for inst   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ]
domains = 
Zero     MaybeZeroMaybeZerodomains differ, add successors? if they were they would be
succ = %i.0    
succ = %cmp    
succ = 
succ = %add    
succ = %div    
succ = 
succ = %inc    
succ = 
succ = %sum.0  
(prevmem) we just may be loopin. found   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] and 1
b4 construct map
(cmap) we just may be loopin. found   br label %for.cond and 1
b5 construct map
b5 flowout
inst =   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] name = %i.0    
b4 flow in
names = %add     %i.0    
names = %cmp     %i.0    
names = %div     %i.0    
names = %i.0     %i.0    
names = %inc     %i.0    
names = %sum.0   %i.0    
path len = 1
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
Uninit   %div     
Uninit   %i.0     
Uninit   %inc     
Uninit   %sum.0   
MaybeZeropath len = 2
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 4
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
MaybeZeropath len = 5
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 6
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
MaybeZeropath len = 7
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 8
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
MaybeZeropath len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 transfer
reached transfer where inst =   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] 0x823a38
b5 transfer
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 flowout
mems = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inst name = %i.0     for inst   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
domains = 
Zero     MaybeZeroMaybeZerodomains differ, add successors? if they were they would be
succ = %cmp    
succ = 
succ = %add    
succ = %div    
succ = 
succ = %inc    
succ = 
succ = %sum.0  
succ = %i.0    
(prevmem) we just may be loopin. found   %cmp = icmp slt i32 %i.0, 10 and 1
b4 construct map
(cmap) we just may be loopin. found   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] and 1
b5 construct map
b5 flowout
inst =   %cmp = icmp slt i32 %i.0, 10 name = %cmp    
b4 flow in
names = %add     %cmp    
names = %cmp     %cmp    
names = %div     %cmp    
names = %i.0     %cmp    
names = %inc     %cmp    
names = %sum.0   %cmp    
path len = 1
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
Uninit   %div     
Uninit   %i.0     
MaybeZero%inc     
Uninit   %sum.0   
Zero     path len = 2
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
Uninit   %div     
Uninit   %i.0     
MaybeZero%inc     
Uninit   %sum.0   
MaybeZeropath len = 3
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 5
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 6
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 8
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %cmp = icmp slt i32 %i.0, 10 and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 transfer
reached transfer where inst =   %cmp = icmp slt i32 %i.0, 10 0x823b50
b5 transfer
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 flowout
mems = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inst name = %cmp     for inst   %cmp = icmp slt i32 %i.0, 10
domains = 
MaybeZeroMaybeZeroMaybeZerob4 construct map
(cmap) we just may be loopin. found   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] and 1
b5 construct map
b5 flowout
inst =   br i1 %cmp, label %for.body, label %for.end name = 
b4 flow in
names = %add     
names = %cmp     
names = %div     
names = %i.0     
names = %inc     
names = %sum.0   
path len = 1
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 2
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
Uninit   %sum.0   
Zero     path len = 3
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
Uninit   %sum.0   
MaybeZeropath len = 4
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 6
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 7
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 8
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 transfer
reached transfer where inst =   br i1 %cmp, label %for.body, label %for.end 0x7c7ac8
b5 transfer
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 flowout
mems = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
(cmap) we just may be loopin. found   %cmp = icmp slt i32 %i.0, 10 and 1
b5 flowout
inst =   %add = add nsw i32 %sum.0, 1 name = %add    
b4 flow in
names = %add     %add    
names = %cmp     %add    
names = %div     %add    
names = %i.0     %add    
names = %inc     %add    
names = %sum.0   %add    
path len = 1
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 2
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 3
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
Uninit   %sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
Uninit   %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
Uninit   %sum.0   
MaybeZeropath len = 5
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 8
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %add = add nsw i32 %sum.0, 1 and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 transfer
reached transfer where inst =   %add = add nsw i32 %sum.0, 1 0x823dc0
opname = add opcode = 12
b5 transfer
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 flowout
mems = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inst name = %add     for inst   %add = add nsw i32 %sum.0, 1
domains = 
NonZero  MaybeZeroMaybeZerodomains differ, add successors? if they were they would be
succ = 
succ = %inc    
succ = 
succ = %sum.0  
succ = %i.0    
succ = %cmp    
succ = 
succ = %add    
succ = %div    
(prevmem) we just may be loopin. found   br label %for.inc and 1
b4 construct map
(cmap) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 construct map
b5 flowout
inst =   br label %for.inc name = 
b4 flow in
names = %add     
names = %cmp     
names = %div     
names = %i.0     
names = %inc     
names = %sum.0   
path len = 1
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 2
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 3
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
Uninit   %sum.0   
Zero     path len = 5
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
Uninit   %sum.0   
MaybeZeropath len = 6
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 8
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   br label %for.inc and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %add    
(prevmeminst) pred = 
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 transfer
reached transfer where inst =   br label %for.inc 0x823038
b5 transfer
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 flowout
mems = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
(cmap) we just may be loopin. found   %add = add nsw i32 %sum.0, 1 and 1
b5 flowout
inst =   %div = sdiv i32 %i.0, %sum.0 name = %div    
b4 flow in
names = %add     %div    
names = %cmp     %div    
names = %div     %div    
names = %i.0     %div    
names = %inc     %div    
names = %sum.0   %div    
path len = 1
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 2
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
Zero     path len = 3
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 5
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 8
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 9
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 10
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmem) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
prev out memory = 

size of it is 0
b4 transfer
reached transfer where inst =   %div = sdiv i32 %i.0, %sum.0 0x823ea0
opname = sdiv opcode = 19
b5 transfer
prev out memory = 

size of it is 0
b4 flowout
mems = 


--spacing--

    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inst name = %div     for inst   %div = sdiv i32 %i.0, %sum.0
domains = 
Uninit   Uninit   Uninit   b4 construct map
(cmap) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 construct map
b5 flowout
inst =   %inc = add nsw i32 %i.0, 1 name = %inc    
b4 flow in
names = %add     %inc    
names = %cmp     %inc    
names = %div     %inc    
names = %i.0     %inc    
names = %inc     %inc    
names = %sum.0   %inc    
path len = 1
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 2
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 3
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 4
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
Uninit   %sum.0   
Zero     path len = 5
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
Uninit   %sum.0   
Zero     path len = 6
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
Uninit   %sum.0   
MaybeZeropath len = 7
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %inc = add nsw i32 %i.0, 1 and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 transfer
reached transfer where inst =   %inc = add nsw i32 %i.0, 1 0x823e30
opname = add opcode = 12
b5 transfer
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
size of it is 5
b4 flowout
mems = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
inst name = %inc     for inst   %inc = add nsw i32 %i.0, 1
domains = 
NonZero  MaybeZeroMaybeZerodomains differ, add successors? if they were they would be
succ = 
succ = %sum.0  
succ = %i.0    
succ = %cmp    
succ = 
succ = %add    
succ = %div    
succ = 
succ = %inc    
(prevmem) we just may be loopin. found   br label %for.cond and 1
b4 construct map
(cmap) we just may be loopin. found   br label %for.inc and 1
b5 construct map
b5 flowout
inst =   br label %for.cond name = 
b4 flow in
names = %add     
names = %cmp     
names = %div     
names = %i.0     
names = %inc     
names = %sum.0   
path len = 1
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
MaybeZero%sum.0   
Zero     path len = 2
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 3
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
MaybeZero%sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 5
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
MaybeZero%sum.0   
Zero     path len = 6
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
Zero     path len = 7
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
MaybeZeropath len = 8
sizeof predsinst = 2
code goes here
(flowin) we just may be loopin. found   br label %for.cond and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 transfer
reached transfer where inst =   br label %for.cond 0x8239e8
b5 transfer
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 flowout
mems = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
(cmap) we just may be loopin. found   %inc = add nsw i32 %i.0, 1 and 1
b5 flowout
inst =   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] name = %sum.0  
b4 flow in
names = %add     %sum.0  
names = %cmp     %sum.0  
names = %div     %sum.0  
names = %i.0     %sum.0  
names = %inc     %sum.0  
names = %sum.0   %sum.0  
path len = 1
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 3
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
MaybeZero%sum.0   
Zero     path len = 4
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 5
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
MaybeZero%sum.0   
Zero     path len = 6
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
MaybeZero%sum.0   
Zero     path len = 8
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
Zero     path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
size of it is 6
b4 transfer
reached transfer where inst =   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] 0x8238c8
b5 transfer
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
size of it is 6
b4 flowout
mems = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]

--spacing--

    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inst name = %sum.0   for inst   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ]
domains = 
MaybeZeroMaybeZeroMaybeZerob4 construct map
(cmap) we just may be loopin. found   br label %for.cond and 1
b5 construct map
b5 flowout
inst =   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] name = %i.0    
b4 flow in
names = %add     %i.0    
names = %cmp     %i.0    
names = %div     %i.0    
names = %i.0     %i.0    
names = %inc     %i.0    
names = %sum.0   %i.0    
path len = 1
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
NonZero  %sum.0   
MaybeZeropath len = 2
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 4
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
MaybeZero%sum.0   
MaybeZeropath len = 5
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 6
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
MaybeZero%sum.0   
MaybeZeropath len = 7
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 8
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
Zero     %inc     
MaybeZero%sum.0   
MaybeZeropath len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 transfer
reached transfer where inst =   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] 0x823a38
b5 transfer
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 flowout
mems = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inst name = %i.0     for inst   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
domains = 
MaybeZeroMaybeZeroMaybeZerob4 construct map
(cmap) we just may be loopin. found   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] and 1
b5 construct map
b5 flowout
inst =   %cmp = icmp slt i32 %i.0, 10 name = %cmp    
b4 flow in
names = %add     %cmp    
names = %cmp     %cmp    
names = %div     %cmp    
names = %i.0     %cmp    
names = %inc     %cmp    
names = %sum.0   %cmp    
path len = 1
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 2
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 3
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 5
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
MaybeZeropath len = 6
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
MaybeZeropath len = 8
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %cmp = icmp slt i32 %i.0, 10 and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 transfer
reached transfer where inst =   %cmp = icmp slt i32 %i.0, 10 0x823b50
b5 transfer
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 flowout
mems = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inst name = %cmp     for inst   %cmp = icmp slt i32 %i.0, 10
domains = 
MaybeZeroMaybeZeroMaybeZerob4 construct map
(cmap) we just may be loopin. found   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] and 1
b5 construct map
b5 flowout
inst =   br i1 %cmp, label %for.body, label %for.end name = 
b4 flow in
names = %add     
names = %cmp     
names = %div     
names = %i.0     
names = %inc     
names = %sum.0   
path len = 1
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 2
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 3
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 4
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 6
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
MaybeZeropath len = 7
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 8
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
MaybeZeropath len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 transfer
reached transfer where inst =   br i1 %cmp, label %for.body, label %for.end 0x7c7ac8
b5 transfer
prev out memory = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 flowout
mems = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
(cmap) we just may be loopin. found   %cmp = icmp slt i32 %i.0, 10 and 1
b5 flowout
inst =   %add = add nsw i32 %sum.0, 1 name = %add    
b4 flow in
names = %add     %add    
names = %cmp     %add    
names = %div     %add    
names = %i.0     %add    
names = %inc     %add    
names = %sum.0   %add    
path len = 1
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 2
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 3
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 4
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 5
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
NonZero  %cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
MaybeZeropath len = 8
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   %add = add nsw i32 %sum.0, 1 and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
prev out memory = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 transfer
reached transfer where inst =   %add = add nsw i32 %sum.0, 1 0x823dc0
opname = add opcode = 12
b5 transfer
prev out memory = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 flowout
mems = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inst name = %add     for inst   %add = add nsw i32 %sum.0, 1
domains = 
MaybeZeroMaybeZeroMaybeZerob4 construct map
(cmap) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 construct map
b5 flowout
inst =   %div = sdiv i32 %i.0, %sum.0 name = %div    
b4 flow in
names = %add     %div    
names = %cmp     %div    
names = %div     %div    
names = %i.0     %div    
names = %inc     %div    
names = %sum.0   %div    
path len = 1
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 2
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 3
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 4
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 5
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 7
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
MaybeZeropath len = 8
sizeof predsinst = 1
code goes here
pred name =  and   br label %for.inc with size = 0
path len = 9
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
MaybeZeropath len = 10
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = 
(prevmeminst) pred = %cmp    
(prevmeminst) pred = %i.0    
(prevmeminst) pred = %sum.0  
(prevmeminst) pred = 
(prevmeminst) pred = 
(prevmeminst) pred = %inc    
(prevmeminst) pred = 
(prevmeminst) pred = %add    
(prevmem) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
prev out memory = 

size of it is 0
b4 transfer
reached transfer where inst =   %div = sdiv i32 %i.0, %sum.0 0x823ea0
opname = sdiv opcode = 19
b5 transfer
prev out memory = 

size of it is 0
b4 flowout
mems = 


--spacing--

    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
inst name = %div     for inst   %div = sdiv i32 %i.0, %sum.0
domains = 
Uninit   Uninit   Uninit   b4 construct map
(cmap) we just may be loopin. found   br i1 %cmp, label %for.body, label %for.end and 1
b5 construct map
b5 flowout
inst =   br label %for.inc name = 
b4 flow in
names = %add     
names = %cmp     
names = %div     
names = %i.0     
names = %inc     
names = %sum.0   
path len = 1
sizeof predsinst = 1
code goes here
pred name = %add     and   %add = add nsw i32 %sum.0, 1 with size = 8
outmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 2
sizeof predsinst = 1
code goes here
pred name =  and   br i1 %cmp, label %for.body, label %for.end with size = 0
path len = 3
sizeof predsinst = 1
code goes here
pred name = %cmp     and   %cmp = icmp slt i32 %i.0, 10 with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 4
sizeof predsinst = 1
code goes here
pred name = %i.0     and   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 5
sizeof predsinst = 1
code goes here
pred name = %sum.0   and   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ] with size = 8
outmem = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
NonZero  %sum.0   
MaybeZeropath len = 6
sizeof predsinst = 2
code goes here
pred name =  and   br label %for.cond with size = 0
code goes here
pred name =  and   br label %for.cond with size = 0
path len = 8
sizeof predsinst = 1
code goes here
pred name = %inc     and   %inc = add nsw i32 %i.0, 1 with size = 8
outmem = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
inmem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> MaybeZero ]
join i = %add    
pre count
join i = %cmp    
pre count
join i = %div    
pre count
join i = %i.0    
pre count
join i = %inc    
pre count
join i = %sum.0  
pre count
join i (d2) = %add    
join i (d2) = %cmp    
join i (d2) = %div    
join i (d2) = %i.0    
join i (d2) = %inc    
join i (d2) = %sum.0  
joined mem = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b4 make pair
done size check
done count check
inmem (2) = 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
flowin-b5 make pair
total mem map = 
%add     
MaybeZero%cmp     
MaybeZero%div     
Uninit   %i.0     
MaybeZero%inc     
MaybeZero%sum.0   
MaybeZeropath len = 9
sizeof predsinst = 1
code goes here
(flowin) we just may be loopin. found   br label %for.inc and 1
b5 flow in
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = 

prev inst map = %sum.0  
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
prev inst map = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %cmp    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %i.0    
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = %add    
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
prev inst map = 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %div    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
prev inst map = %inc    
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
(prevmeminst) pred = %add    
(prevmeminst) pred = 
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 transfer
reached transfer where inst =   br label %for.inc 0x823038
b5 transfer
prev out memory = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
size of it is 6
b4 flowout
mems = 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

--spacing--

    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]
(cmap) we just may be loopin. found   %add = add nsw i32 %sum.0, 1 and 1
b5 flowout
Dataflow Analysis Results:
Instruction:   br label %for.cond
In set: 

Out set: 


Instruction:   %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ]
In set: 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]
Out set: 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Uninit    ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]

Instruction:   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
In set: 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
Out set: 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> Uninit    ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

Instruction:   %cmp = icmp slt i32 %i.0, 10
In set: 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
Out set: 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

Instruction:   br i1 %cmp, label %for.body, label %for.end
In set: 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
Out set: 
    [ %add     |-> Uninit    ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

Instruction:   %add = add nsw i32 %sum.0, 1
In set: 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
Out set: 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

Instruction:   br label %for.inc
In set: 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
Out set: 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> Zero      ]

Instruction:   %inc = add nsw i32 %i.0, 1
In set: 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> Uninit    ]
    [ %sum.0   |-> MaybeZero ]
Out set: 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> Zero      ]

Instruction:   br label %for.cond
In set: 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
Out set: 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]

Instruction:   %div = sdiv i32 %i.0, %sum.0
In set: 
    [ %add     |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> MaybeZero ]
    [ %inc     |-> MaybeZero ]
    [ %sum.0   |-> MaybeZero ]
Out set: 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]

Instruction:   ret void
In set: 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]
Out set: 
    [ %add     |-> NonZero   ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %i.0     |-> Zero      ]
    [ %inc     |-> NonZero   ]
    [ %sum.0   |-> Zero      ]

